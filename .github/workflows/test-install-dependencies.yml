 name: OS Support

 on:
  workflow_dispatch:
  push:
    paths:
      - 'docs/source/_static/install_dependencies.sh'
      - 'examples/install_requirements.py'
  pull_request:
      paths:
      - 'docs/source/_static/install_dependencies.sh'
      - 'examples/install_requirements.py'

 jobs:
   test_linux:
     runs-on: ubuntu-latest
     strategy:
       matrix:
          container_image: ["fedora:34", "fedora:35", "fedora:36", "ubuntu:18.04", "ubuntu:20.04", "ubuntu:22.04", "ubuntu:rolling"]
     container:
       image: ${{ matrix.container_image }}
     steps:
       - uses: actions/checkout@v3
       - name: Install sudo
         if: startsWith(matrix.container_image, 'fedora') == true
         run: yum update -y && yum install -y sudo
       - name: Install sudo
         if: startsWith(matrix.container_image, 'ubuntu') == true
         run: apt-get update  -qq && apt-get -qq install sudo
       - name: Install dependencies
         run: |
           ln -snf /usr/share/zoneinfo/UTC /etc/localtime && echo UTC > /etc/timezone # Otherwise tzdata installer prompts for user input
           sed '/udevadm control --reload-rules && sudo udevadm trigger/d' docs/source/_static/install_dependencies.sh > tmp_script.sh # Doesn't work on docker
           bash tmp_script.sh
       - name: Create a virtual environment
         if: endsWith(matrix.container_image, 'rolling') == true
         run: |
           sudo apt-get install -y python3-venv
           python3 -m venv venv
           . venv/bin/activate
           pip install --upgrade pip 
           python3 examples/install_requirements.py
         shell: bash
       - name: Install example requirements
         if: endsWith(matrix.container_image, 'rolling') == false
         run: |
           python3 examples/install_requirements.py
   test_macos:
      strategy:
        matrix:
          os: ["macos-11", "macos-12", "macos-13", "macos-14"]
      runs-on: ${{ matrix.os }}
      steps:
       - uses: actions/checkout@v3
       - name: Install dependencies
         run: |
           sed '/udevadm control --reload-rules && sudo udevadm trigger/d' docs/source/_static/install_dependencies.sh > tmp_script.sh
           bash tmp_script.sh
       - name: Install example requirements
         run: |
           python3 examples/install_requirements.py
   test_windows:
      runs-on: windows-latest
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
           python-version: "3.10"
      - name: Download chocolatey
        shell: pwsh
        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: Install pycharm-community dependency
        shell: pwsh
        run: choco install pycharm-community -y
      - name: Install example requirements
        run: |
          python examples/install_requirements.py
             
